"use strict";(self.webpackChunkvue_book=self.webpackChunkvue_book||[]).push([[9630],{93899:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-9470d818",path:"/vue_still_learn/",title:"",lang:"en-US",frontmatter:{sidebarDepth:4},excerpt:"",headers:[{level:2,title:"目录",slug:"目录",children:[]},{level:2,title:"概括",slug:"概括",children:[]},{level:2,title:"node-sass",slug:"node-sass",children:[]},{level:2,title:"vue 过滤器",slug:"vue-过滤器",children:[]},{level:2,title:"主动触发 element 表单的检查",slug:"主动触发-element-表单的检查",children:[]},{level:2,title:"使用 vuepress 内置组件 codegroup",slug:"使用-vuepress-内置组件-codegroup",children:[]},{level:2,title:"快速复制网页的 cookie",slug:"快速复制网页的-cookie",children:[]},{level:2,title:"echarts 的图标监听 window 的大小重绘",slug:"echarts-的图标监听-window-的大小重绘",children:[]},{level:2,title:"获取浏览器 Cookie 的值",slug:"获取浏览器-cookie-的值",children:[]},{level:2,title:"将 rgb 转换成十六进制",slug:"将-rgb-转换成十六进制",children:[]},{level:2,title:"复制到剪贴板",slug:"复制到剪贴板",children:[]},{level:2,title:"数组去重",slug:"数组去重",children:[]},{level:2,title:"深拷贝",slug:"深拷贝",children:[]},{level:2,title:"使用 Map 深拷贝",slug:"使用-map-深拷贝",children:[]},{level:2,title:"判断字符串是否全为空",slug:"判断字符串是否全为空",children:[]},{level:2,title:"判断对象是否为空",slug:"判断对象是否为空",children:[]},{level:2,title:"检查日期是否有效",slug:"检查日期是否有效",children:[]},{level:2,title:"查找一年中的某一天",slug:"查找一年中的某一天",children:[]},{level:2,title:"大写字符串",slug:"大写字符串",children:[]},{level:2,title:"create-vue",slug:"create-vue",children:[]},{level:2,title:"给所有的 div 一个 outline 样式",slug:"给所有的-div-一个-outline-样式",children:[]},{level:2,title:"屏幕录制",slug:"屏幕录制",children:[]},{level:2,title:"代理页面解决跨域(子页面 iframe 访问父页面)",slug:"代理页面解决跨域-子页面-iframe-访问父页面",children:[]},{level:2,title:"v8",slug:"v8",children:[]},{level:2,title:"局域网分享代码方案",slug:"局域网分享代码方案",children:[]},{level:2,title:"生成器示例",slug:"生成器示例",children:[]},{level:2,title:"vue slot 常用",slug:"vue-slot-常用",children:[]},{level:2,title:"事件冒泡与事件捕获",slug:"事件冒泡与事件捕获",children:[]},{level:2,title:"vue3自定义指令",slug:"vue3自定义指令",children:[]},{level:2,title:"数组对象平铺后遍历处理属性结构的数据(自理的树状对象的垃圾处理方法)",slug:"数组对象平铺后遍历处理属性结构的数据-自理的树状对象的垃圾处理方法",children:[]},{level:2,title:"JS type coercion",slug:"js-type-coercion",children:[]},{level:2,title:"网页全屏/退出全屏",slug:"网页全屏-退出全屏",children:[]},{level:2,title:"async/await",slug:"async-await",children:[]}],filePathRelative:"vue_still_learn/README.md",git:{updatedTime:1655776049e3,contributors:[{name:"ajn404",email:"nhy1423238345@163.com",commits:26},{name:"n-graymoon",email:"huiyue.ning@71360.com",commits:17},{name:"mac_ajn404",email:"huiyuening00@gmail.com",commits:6},{name:"ajn404",email:"huiyuening00@gmail.com",commits:1}]}}},67004:(n,s,a)=>{a.r(s),a.d(s,{default:()=>cn});var t=a(66252);const p=(0,t._)("h2",{id:"目录",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),(0,t.Uk)(" 目录")],-1),e={class:"table-of-contents"},o=(0,t.Uk)("目录"),c=(0,t.Uk)("概括"),l=(0,t.Uk)("node-sass"),u=(0,t.Uk)("vue 过滤器"),i=(0,t.Uk)("主动触发 element 表单的检查"),r=(0,t.Uk)("使用 vuepress 内置组件 codegroup"),k=(0,t.Uk)("快速复制网页的 cookie"),d=(0,t.Uk)("echarts 的图标监听 window 的大小重绘"),m=(0,t.Uk)("获取浏览器 Cookie 的值"),b=(0,t.Uk)("将 rgb 转换成十六进制"),g=(0,t.Uk)("复制到剪贴板"),h=(0,t.Uk)("数组去重"),v=(0,t.Uk)("深拷贝"),f=(0,t.Uk)("使用 Map 深拷贝"),y=(0,t.Uk)("判断字符串是否全为空"),w=(0,t.Uk)("判断对象是否为空"),q=(0,t.Uk)("检查日期是否有效"),x=(0,t.Uk)("查找一年中的某一天"),_=(0,t.Uk)("大写字符串"),j=(0,t.Uk)("create-vue"),U=(0,t.Uk)("给所有的 div 一个 outline 样式"),W=(0,t.Uk)("屏幕录制"),C=(0,t.Uk)("代理页面解决跨域(子页面 iframe 访问父页面)"),D=(0,t.Uk)("v8"),E=(0,t.Uk)("局域网分享代码方案"),S=(0,t.Uk)("生成器示例"),T=(0,t.Uk)("vue slot 常用"),O=(0,t.Uk)("事件冒泡与事件捕获"),N=(0,t.Uk)("vue3自定义指令"),F=(0,t.Uk)("数组对象平铺后遍历处理属性结构的数据(自理的树状对象的垃圾处理方法)"),A=(0,t.Uk)("JS type coercion"),M=(0,t.Uk)("网页全屏/退出全屏"),L=(0,t.Uk)("async/await"),z=(0,t.uE)('<h2 id="概括" tabindex="-1"><a class="header-anchor" href="#概括" aria-hidden="true">#</a> 概括</h2><p>技术积累</p><h2 id="node-sass" tabindex="-1"><a class="header-anchor" href="#node-sass" aria-hidden="true">#</a> node-sass</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>cnpm i\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>不然会报错</p><h2 id="vue-过滤器" tabindex="-1"><a class="header-anchor" href="#vue-过滤器" aria-hidden="true">#</a> vue 过滤器</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">ellipsis</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;...&#39;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> value\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></details><p><strong>在 3.x 中，过滤器已移除，且不再支持。取而代之的是，我们建议用方法调用或计算属性来替换它们。</strong></p><h2 id="主动触发-element-表单的检查" tabindex="-1"><a class="header-anchor" href="#主动触发-element-表单的检查" aria-hidden="true">#</a> 主动触发 element 表单的检查</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>ruleForm<span class="token punctuation">.</span><span class="token function">validateField</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></details><h2 id="使用-vuepress-内置组件-codegroup" tabindex="-1"><a class="header-anchor" href="#使用-vuepress-内置组件-codegroup" aria-hidden="true">#</a> 使用 vuepress 内置组件 codegroup</h2>',11),R=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t._)("span",{class:"token function"},"yarn"),(0,t.Uk)("\n")])])],-1),I=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t._)("span",{class:"token function"},"npm"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)("\n")])])],-1),Y=(0,t._)("div",{class:"custom-container tip"},[(0,t._)("p",{class:"custom-container-title"},"在 vue 中实现 p5 有点恶心心 1.使用 toDataURL 把 canvas 转换成 base64 图片地址 2.或者用 refs 把 canvas \"appendChild\"到 vue 组件中 3.组件中导入 p5,其中 p5 的方法都要加'p5.'，否则会报错")],-1),$=(0,t.uE)(' vue的组件代码如下 <details class="custom-container details"><summary>查看代码</summary><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>mounted() { this.$nextTick(()=&gt;{ let judgeCanvasExist =\ndocument.getElementById(&quot;defaultCanvas0&quot;) if(judgeCanvasExist===null) { new\nP5(this.main); } }) }, methods: { main(_p5) { let p5 = _p5; let bubbles = [];\nconst window_width = window.innerWidth; const window_height =\nwindow.innerHeight; p5.setup = () =&gt; { p5.createCanvas(window_width / 4,\nwindow_height / 4); for (let i = 0; i &lt; 100; i++) { let x = p5.random(p5.width);\nlet y = p5.random(p5.height); let r = p5.random(20, 60); let b = new Bubble(x,\ny, r); bubbles.push(b); }; let\nmyCanvas=document.getElementById(&quot;defaultCanvas0&quot;); let container =\nthis.$refs.box; container.appendChild(myCanvas) // let dataUrl =\nmyCanvas.toDataURL(); //base64 // this.canvasUrl = dataUrl; //\nconsole.log(typeof myCanvas) // console.log(myCanvas.parentNode) // debugger //\nmyCanvas.parentNode.removeNode(myCanvas) } p5.mouseMoved = () =&gt; { for (let i =\nbubbles.length - 1; i &gt;= 0; i--) { if (bubbles[i].contains(p5.mouseX,\np5.mouseY)) { bubbles.splice(i, 1); } } } p5.draw = () =&gt; { p5.background(0);\nfor (let i = 0; i &lt; bubbles.length; i++) { if (bubbles[i].contains(p5.mouseX,\np5.mouseY)) { bubbles[i].changeColor(255); } else { bubbles[i].changeColor(0); }\nbubbles[i].move(); bubbles[i].show(); } } class Bubble { constructor(x, y, r) {\nthis.x = x; this.y = y; this.r = r; this.brightness = 0; } changeColor(bright) {\nthis.brightness = bright; } contains(px, py) { let d = p5.dist(px, py, this.x,\nthis.y); if (d &lt; this.r) { return true; } else { return false; } } move() {\nthis.x = this.x + p5.random(-2, 2); this.y = this.y + p5.random(-2, 2); } show()\n{ p5.stroke(255); p5.strokeWeight(4); p5.fill(this.brightness, 125);\np5.ellipse(this.x, this.y, this.r * 2); } } } }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details><h2 id="快速复制网页的-cookie" tabindex="-1"><a class="header-anchor" href="#快速复制网页的-cookie" aria-hidden="true">#</a> 快速复制网页的 cookie</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">copy</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//粘贴并应用</span>\n<span class="token string">&quot;复制的内容&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><h2 id="echarts-的图标监听-window-的大小重绘" tabindex="-1"><a class="header-anchor" href="#echarts-的图标监听-window-的大小重绘" aria-hidden="true">#</a> echarts 的图标监听 window 的大小重绘</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>chartLine<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details>',6),B=(0,t.uE)(' 在博客这里使用的 Echart5 和 vue3,在 mounted 阶段加入上述这行代码，报错了 <div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Uncaught Error<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">resize</span><span class="token template-punctuation string">`</span></span> should not be called during main process<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="获取浏览器-cookie-的值" tabindex="-1"><a class="header-anchor" href="#获取浏览器-cookie-的值" aria-hidden="true">#</a> 获取浏览器 Cookie 的值</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">cookie</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n  <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>document<span class="token punctuation">.</span>cookie<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//cookie(&#39;pgv_pvid&#39;);</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details><h2 id="将-rgb-转换成十六进制" tabindex="-1"><a class="header-anchor" href="#将-rgb-转换成十六进制" aria-hidden="true">#</a> 将 rgb 转换成十六进制</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">rgbToHex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n  <span class="token string">&quot;#&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>g <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//1&lt;&lt;24===1*Math.pow(2,24)</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//rgbToHex(0,51,255)</span>\n<span class="token comment">//toString(16)表示转换成16进制后再转换成字符串</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></details><h2 id="复制到剪贴板" tabindex="-1"><a class="header-anchor" href="#复制到剪贴板" aria-hidden="true">#</a> 复制到剪贴板</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">copyToClipboard</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//copyToClipboard(&#39;hello world&#39;)</span>\n<span class="token comment">//Clipboard API是下一代的剪贴板操作方法，比传统的document.exeCommand()方法更强大、更合理</span>\n<span class="token comment">//如果你把上面的代码，粘贴到开发者工具里面运行，就会报错。因为代码运行的时候，开发者工具窗口是当前页，这个页面不存在 Clipboard API 依赖的 DOM 接口。一个解决方法就是，相关代码放到setTimeout()里面延迟运行，在调用函数之前快速点击浏览器的页面窗口，将其变成当前页。</span>\n<span class="token comment">//参照https://www.ruanyifeng.com/blog/2021/01/clipboard-api.html</span>\n<span class="token comment">/*\nsetTimeout(async () =&gt; {\n  copyToClipboard(&#39;hello world&#39;)\n}, 2000);\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></details><h2 id="数组去重" tabindex="-1"><a class="header-anchor" href="#数组去重" aria-hidden="true">#</a> 数组去重</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> arr <span class="token operator">=</span> target<span class="token punctuation">;</span>\n  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><h2 id="深拷贝" tabindex="-1"><a class="header-anchor" href="#深拷贝" aria-hidden="true">#</a> 深拷贝</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">debugger</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> result<span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>constructor <span class="token operator">===</span> RegExp<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      result <span class="token operator">=</span> target<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    result <span class="token operator">=</span> target<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details><h2 id="使用-map-深拷贝" tabindex="-1"><a class="header-anchor" href="#使用-map-深拷贝" aria-hidden="true">#</a> 使用 Map 深拷贝</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepCloneMethod</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> val <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">function</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">clone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> cloneTarget<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> target<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token function">clone</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div></details><h2 id="判断字符串是否全为空" tabindex="-1"><a class="header-anchor" href="#判断字符串是否全为空" aria-hidden="true">#</a> 判断字符串是否全为空</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[ ]*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="判断对象是否为空" tabindex="-1"><a class="header-anchor" href="#判断对象是否为空" aria-hidden="true">#</a> 判断对象是否为空</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//使用Object.keys()或者Object.getOwnPropertyNames()</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用JSON.stringfy()</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&quot;{}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></details><div class="custom-container tip"><p class="custom-container-title">注意</p><p>Object.keys(), 它返回一个数组，这个数组由对象中可枚举的自有属性的名称组成。 Object.getOwnPropertyNames() 返回一个数组,该数组对元素是 obj 自身拥有的枚举或不可枚举属性名称字符串。</p></div><h2 id="检查日期是否有效" tabindex="-1"><a class="header-anchor" href="#检查日期是否有效" aria-hidden="true">#</a> 检查日期是否有效</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isDateValid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token operator">...</span>val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//isDateValid(new Date())</span>\n<span class="token comment">//true</span>\n<span class="token comment">//new Date()</span>\n<span class="token comment">//Thu Nov 18 2021 21:11:16 GMT+0800 (中国标准时间)</span>\n<span class="token comment">//格林威治的子午线向东偏移8小时</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details><h2 id="查找一年中的某一天" tabindex="-1"><a class="header-anchor" href="#查找一年中的某一天" aria-hidden="true">#</a> 查找一年中的某一天</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">dayOfYear</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n  Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>date <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//dayOfYear(new Date())</span>\n<span class="token comment">//322</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details><h2 id="大写字符串" tabindex="-1"><a class="header-anchor" href="#大写字符串" aria-hidden="true">#</a> 大写字符串</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">capitalize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//capitalize(&#39;heiheiheiyohei&#39;)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details>',25),P={id:"create-vue",tabindex:"-1"},J=(0,t._)("a",{class:"header-anchor",href:"#create-vue","aria-hidden":"true"},"#",-1),X=(0,t.Uk)(),V={href:"https://www.npmjs.com/package/create-vue/v/3.0.0-beta.6",target:"_blank",rel:"noopener noreferrer"},H=(0,t.Uk)("create-vue"),G=(0,t.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> init vue@next\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="给所有的-div-一个-outline-样式" tabindex="-1"><a class="header-anchor" href="#给所有的-div-一个-outline-样式" aria-hidden="true">#</a> 给所有的 div 一个 outline 样式</h2><details class="custom-container details"><summary>查看代码</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token function">$$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  a<span class="token punctuation">.</span>style<span class="token punctuation">.</span>outline <span class="token operator">=</span>\n    <span class="token string">&quot;5px solid #&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details><h2 id="屏幕录制" tabindex="-1"><a class="header-anchor" href="#屏幕录制" aria-hidden="true">#</a> 屏幕录制</h2><details class="custom-container details"><summary>查看代码</summary><ul><li>index.js</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.record-btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nbtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> stream <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">getDisplayMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">video</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> mine <span class="token operator">=</span> MediaRecorder<span class="token punctuation">.</span><span class="token function">isTypeSupported</span><span class="token punctuation">(</span><span class="token string">&quot;video/webm;codecs=vp9&quot;</span><span class="token punctuation">)</span>\n    <span class="token operator">?</span> <span class="token string">&quot;video/webm;codecs=vp9&quot;</span>\n    <span class="token operator">:</span> <span class="token string">&quot;video/webm&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> mediaRecoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaRecorder</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">mimeType</span><span class="token operator">:</span> mine<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> chunks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  mediaRecoder<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;dataavailable&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    chunks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  mediaRecoder<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;stop&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>chunks<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> chunks<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>type<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> video <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.video&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    video<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>\n    a<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&quot;video.webm&quot;</span><span class="token punctuation">;</span>\n    a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  mediaRecoder<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>html</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>record-btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>开始录制<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details>',5),Z=(0,t.uE)('<h2 id="代理页面解决跨域-子页面-iframe-访问父页面" tabindex="-1"><a class="header-anchor" href="#代理页面解决跨域-子页面-iframe-访问父页面" aria-hidden="true">#</a> 代理页面解决跨域(子页面 iframe 访问父页面)</h2><details class="custom-container details"><summary>查看详情</summary><h5 id="父页面-server1-index-html" tabindex="-1"><a class="header-anchor" href="#父页面-server1-index-html" aria-hidden="true">#</a> 父页面 server1/index.html</h5><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">&quot;X-UA-Compatible&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;IE=edge&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n    server1\n    <span class="token operator">&lt;</span>iframe src<span class="token operator">=</span><span class="token string">&quot;http://127.0.0.1:5500/index.html&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>iframe<span class="token operator">&gt;</span>\n\n    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\n        window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;item&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">function</span> <span class="token function">doSomethin</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;server1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n    \n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>\n</code></pre></div><h5 id="子页面-server2-index-html" tabindex="-1"><a class="header-anchor" href="#子页面-server2-index-html" aria-hidden="true">#</a> 子页面 server2/index.html</h5><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">&quot;X-UA-Compatible&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;IE=edge&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>\n\n<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n    serer2\n    <span class="token operator">&lt;</span>button onclick<span class="token operator">=</span><span class="token string">&quot;doSome()&quot;</span><span class="token operator">&gt;</span>\n        跨域\n    <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\n        <span class="token keyword">function</span> <span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;crossFrmane&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">var</span> iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;iframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                iframe<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;position:absolute;left:-199999px;top=-1929999px&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                iframe<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;http://127.0.0.1:5501/iframe.html&#39;</span><span class="token punctuation">)</span>\n                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iframe<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;crossFrmane&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">&#39;http://127.0.0.1:5501/iframe.html&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n            \n\n    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>\n</code></pre></div><h5 id="代理页面-server1-iframe-html" tabindex="-1"><a class="header-anchor" href="#代理页面-server1-iframe-html" aria-hidden="true">#</a> 代理页面 server1/iframe.html</h5><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">&quot;X-UA-Compatible&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;IE=edge&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\n        window<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>top<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n        <span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n    \n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>\n</code></pre></div></details><details class="custom-container details"><summary>记录</summary><p>在公司二次开发 ueditor 的时候遇到了跨域， 情况是当时想把 ueditor 的静态文件传到 cdn 文件目录下 ，项目访问直接在 index.html 或者 webpack 里配置引用， 富文本可以正常显示，但是涉及到弹框的 js 文件会报跨域的错误， 问题出在了 cdn 上的弹框内部 js 访问或操作当前页面中 DOM 导致的跨域， 预想的解决方法：配置 config 中的 iframeUrlMap，同是把 dialog 的文件拷贝在到线上目录下</p></details><h2 id="v8" tabindex="-1"><a class="header-anchor" href="#v8" aria-hidden="true">#</a> v8</h2><div class="custom-container tip"><p class="custom-container-title">如何执行 JavaScript</p><p>将源码 （进行词法分析和语法分析）转为 AST（抽象语法树），然后解释器将其转为字节码， 如果该字节码-是热点代码，则编译器直接将其转为机器码（并把机器码保存下来，以备下次使用）， 若不是热点代码，则由解释器 解释执行字节码 ----------JIT</p></div><div class="custom-container tip"><p class="custom-container-title">JIT 与 AOT</p><p>JIT （Just-In-Time）--即时编译 ，边编译边运行 AOT （ahead of time）运行前进行编译</p></div><h2 id="局域网分享代码方案" tabindex="-1"><a class="header-anchor" href="#局域网分享代码方案" aria-hidden="true">#</a> 局域网分享代码方案</h2>',7),K=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t._)("span",{class:"token function"},"npm"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -g keppler\n")])])],-1),Q=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("keppler "),(0,t._)("span",{class:"token string"},'"My awesome project"'),(0,t.Uk)("\n")])])],-1),nn=(0,t.uE)('<h2 id="生成器示例" tabindex="-1"><a class="header-anchor" href="#生成器示例" aria-hidden="true">#</a> 生成器示例</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">var</span> x<span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    z<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token keyword">yield</span><span class="token punctuation">(</span>x<span class="token operator">*</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> z<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> it1 <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> it2 <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> val1 <span class="token operator">=</span>it1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span>\n<span class="token comment">// 2</span>\n<span class="token keyword">var</span> val2 <span class="token operator">=</span> it2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val2<span class="token punctuation">)</span>\n<span class="token comment">// 2</span>\n<span class="token keyword">var</span> val3 <span class="token operator">=</span> it1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>val2<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val3<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// x=20,z=2;40</span>\n<span class="token keyword">var</span> val4 <span class="token operator">=</span> it2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>val3<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n<span class="token comment">// 600</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val4<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\nit1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>val4<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n<span class="token comment">// 20 300 3</span>\nit2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>val4<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n<span class="token comment">// 200 300 3</span>\n</code></pre></div><h2 id="vue-slot-常用" tabindex="-1"><a class="header-anchor" href="#vue-slot-常用" aria-hidden="true">#</a> vue slot 常用</h2><details class="custom-container details"><summary>查看</summary><ul><li>父组件</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>zt_add</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>子组件</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zt_add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h2 id="事件冒泡与事件捕获" tabindex="-1"><a class="header-anchor" href="#事件冒泡与事件捕获" aria-hidden="true">#</a> 事件冒泡与事件捕获</h2><details class="custom-container details"><summary>代码详情</summary><div class="language-vue ext-vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>event_bubble_capture<span class="token punctuation">&quot;</span></span> <span class="token attr-name">contenteditable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>点击触发<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>\n        addEventListener第三个参数默认为false，表示机制为事件冒泡，自下而上触发事件\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-a<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        a\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-b<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>b<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>res1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>输出为{{ res1.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>\n        addEventListener第三个参数为true，表示机制为事件捕获，自上而下触发事件\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-c<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        c\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-d<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-d<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>d<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>res2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>输出为{{ res2.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dialog_drag</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dialog_drag</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> dialog_drag <span class="token keyword">from</span> <span class="token string">&quot;../advanced/dialog_drag&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      res1<span class="token punctuation">,</span>\n      res2<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>\n    dialog_drag\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defineBubble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defineCapture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">defineBubble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> txt <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> targetA <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">[</span><span class="token string">&quot;button-a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      targetA<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        txt <span class="token operator">+=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>\n        that<span class="token punctuation">.</span>res1<span class="token punctuation">.</span>name <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;=&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        txt<span class="token operator">=</span><span class="token string">&#39;&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> targetB <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">[</span><span class="token string">&quot;button-b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      targetB<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        txt <span class="token operator">+=</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span>\n        that<span class="token punctuation">.</span>res1<span class="token punctuation">.</span>name <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;=&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">defineCapture</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> txt <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> targetA <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">[</span><span class="token string">&quot;button-c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      targetA<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>\n        <span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>\n        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">if</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span> txt<span class="token operator">=</span><span class="token string">&#39;&#39;</span>\n          txt <span class="token operator">+=</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">;</span>\n          that<span class="token punctuation">.</span>res2<span class="token punctuation">.</span>name <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;=&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token boolean">true</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> targetB <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">[</span><span class="token string">&quot;button-d&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      targetB<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>\n        <span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>\n        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          txt <span class="token operator">+=</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">;</span>\n          that<span class="token punctuation">.</span>res2<span class="token punctuation">.</span>name <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;=&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          txt<span class="token operator">=</span><span class="token string">&#39;&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token boolean">true</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n@import &quot;~element-plus/dist/index.css&quot;;\n.all-box{\n  border: 2px solid;\n  border-color:#666666 #00ff00 #888888 #0d84ff;\n  padding: 20px;\n  border-radius: 10px;\n  &amp;::after{\n    content: &#39; &#39;;\n    display: block;\n    width: 60px;\n    height: 20px;\n    background-color: #8c939d;\n    transform: rotate(25deg) translate(-41%,181%);\n  }\n  &amp;::before{\n    content: &#39; &#39;;\n    display: block;\n    width: 60px;\n    height: 20px;\n    background-color: #8c939d;\n    transform: rotate(-25deg) translate(-50%,-181%);\n  }\n}\n.event_bubble_capture {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  .button-a,\n  .button-c {\n    width: 100px;\n    height: 100px;\n    background-color: rgb(random(235), random(235), random(235));\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    color: #fff;\n    font-size: 1.2em;\n    font-weight: 500;\n    cursor: pointer;\n    .button-b,\n    .button-d {\n      width: 20px;\n      height: 20px;\n      text-align: center;\n      line-height: 20px;\n      background-color: rgb(random(235), random(235), random(235));\n    }\n    .button-d {\n      background-color: rgb(random(235), random(235), random(235));\n    }\n  }\n  .button-c {\n    background-color: rgb(random(235), random(235), random(235));\n  }\n}\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div></details><h2 id="vue3自定义指令" tabindex="-1"><a class="header-anchor" href="#vue3自定义指令" aria-hidden="true">#</a> vue3自定义指令</h2><details class="custom-container details"><summary>查看详情</summary><div class="language-vue ext-vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialog-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>placeholder<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 20em</span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">v-focus</span>  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputString<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-heightLight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>10vh<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Tag 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>自由移动块(自由度高，且设置了z-index)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-drag</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>control<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>move me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">{</span>reactive<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> h<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n    <span class="token keyword">import</span> <span class="token punctuation">{</span>ElNotification<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> dialogVisible <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                dialogVisible<span class="token punctuation">,</span>\n                <span class="token literal-property property">inputString</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function">handelClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>dialogVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token function">ElNotification</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;wow&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;color: teal&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;you clicked me&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">focus</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">heightLight</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">drag</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">const</span> dragDom <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.control&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    dragDom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">=</span> <span class="token string">&#39;move&#39;</span><span class="token punctuation">;</span>\n                    dragDom<span class="token punctuation">.</span><span class="token function-variable function">onmousedown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n                        e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> disX <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX<span class="token operator">-</span> <span class="token function">Number</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> disY <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY<span class="token operator">-</span><span class="token function">Number</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                        document<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token comment">//用鼠标的位置减去鼠标相对元素的位置，得到元素的位置</span>\n                            <span class="token keyword">let</span> left <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>\n                            <span class="token keyword">let</span> top <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>\n                            el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> left <span class="token operator">-</span> disX  <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>\n                            el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> top <span class="token operator">-</span> disY <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                        document<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                            document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n                            document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n    <span class="token selector">.dialog-box</span> <span class="token punctuation">{</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token selector">.box</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>\n        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n        <span class="token property">z-index</span><span class="token punctuation">:</span> 9999<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token selector">.box .control</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></details><ul><li>上述事件...和自定义指令写在下面的组件中</li></ul>',9),sn=(0,t.uE)('<h2 id="数组对象平铺后遍历处理属性结构的数据-自理的树状对象的垃圾处理方法" tabindex="-1"><a class="header-anchor" href="#数组对象平铺后遍历处理属性结构的数据-自理的树状对象的垃圾处理方法" aria-hidden="true">#</a> 数组对象平铺后遍历处理属性结构的数据(自理的树状对象的垃圾处理方法)</h2><details class="custom-container details"><summary>查看详情</summary><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token punctuation">{</span>\n                        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span>\n                    <span class="token punctuation">{</span>\n                        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">5</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n                        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">6</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">7</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">10</span>\n            <span class="token punctuation">}</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n<span class="token keyword">let</span> filterData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getFilterData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">treeData<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>treeData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">let</span> item <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>treeData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token function">set</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                value <span class="token operator">=</span> treeData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> treeData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        filterData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>treeData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token function">getFilterData</span><span class="token punctuation">(</span>treeData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token function">getFilterData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filterData<span class="token punctuation">)</span>\n</code></pre></div></details><h2 id="js-type-coercion" tabindex="-1"><a class="header-anchor" href="#js-type-coercion" aria-hidden="true">#</a> JS type coercion</h2>',3),an={href:"https://eqeq.js.org/#zh",target:"_blank",rel:"noopener noreferrer"},tn=(0,t.Uk)("你真的了解‘==’么"),pn=(0,t.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1</span><span class="token operator">==</span><span class="token string">&#39;1&#39;</span>\n<span class="token comment">// true</span>\n<span class="token number">1</span><span class="token operator">===</span><span class="token string">&#39;1&#39;</span>\n<span class="token comment">// false</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 5</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// </span>\n<span class="token operator">-</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token operator">+</span><span class="token number">0</span>\n<span class="token comment">// true</span>\nObject<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token comment">// false</span>\n<span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span>\n<span class="token comment">// false</span>\nobject<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span><span class="token number">NaN</span><span class="token punctuation">)</span>\n<span class="token comment">// true</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="网页全屏-退出全屏" tabindex="-1"><a class="header-anchor" href="#网页全屏-退出全屏" aria-hidden="true">#</a> 网页全屏/退出全屏</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> doc <span class="token operator">=</span> document<span class="token punctuation">;</span>\n<span class="token keyword">const</span> html <span class="token operator">=</span> doc<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> enter <span class="token operator">=</span>\n  html<span class="token punctuation">.</span>requestFullscreen <span class="token operator">||</span>\n  html<span class="token punctuation">.</span>webkitRequestFullScreen <span class="token operator">||</span>\n  html<span class="token punctuation">.</span>mozRequestFullScreen <span class="token operator">||</span>\n  html<span class="token punctuation">.</span>msRequestFullscreen<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> exit <span class="token operator">=</span>\n  doc<span class="token punctuation">.</span>exitFullscreen <span class="token operator">||</span>\n  doc<span class="token punctuation">.</span>webkitCancelFullScreen <span class="token operator">||</span>\n  doc<span class="token punctuation">.</span>mozCancelFullScreen <span class="token operator">||</span>\n  doc<span class="token punctuation">.</span>msExitFullscreen<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">enterFullScreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  enter <span class="token operator">&amp;&amp;</span> <span class="token function">enter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">exitFullScreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  exit <span class="token operator">&amp;&amp;</span> <span class="token function">exit</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> enterFullScreen<span class="token punctuation">,</span> exitFullScreen <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>',3),en=(0,t._)("h2",{id:"async-await",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#async-await","aria-hidden":"true"},"#"),(0,t.Uk)(),(0,t._)("a",{href:""},"async/await")],-1),on={},cn=(0,a(83744).Z)(on,[["render",function(n,s){const a=(0,t.up)("RouterLink"),on=(0,t.up)("CodeGroupItem"),cn=(0,t.up)("CodeGroup"),ln=(0,t.up)("vue-still-learn"),un=(0,t.up)("ClientOnly"),rn=(0,t.up)("echart-bar-demo"),kn=(0,t.up)("OutboundLink"),dn=(0,t.up)("screen-record"),mn=(0,t.up)("event-bubble-capture"),bn=(0,t.up)("full-screen");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("nav",e,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(a,{to:"#目录"},{default:(0,t.w5)((()=>[o])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#概括"},{default:(0,t.w5)((()=>[c])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#node-sass"},{default:(0,t.w5)((()=>[l])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#vue-过滤器"},{default:(0,t.w5)((()=>[u])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#主动触发-element-表单的检查"},{default:(0,t.w5)((()=>[i])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#使用-vuepress-内置组件-codegroup"},{default:(0,t.w5)((()=>[r])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#快速复制网页的-cookie"},{default:(0,t.w5)((()=>[k])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#echarts-的图标监听-window-的大小重绘"},{default:(0,t.w5)((()=>[d])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#获取浏览器-cookie-的值"},{default:(0,t.w5)((()=>[m])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#将-rgb-转换成十六进制"},{default:(0,t.w5)((()=>[b])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#复制到剪贴板"},{default:(0,t.w5)((()=>[g])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#数组去重"},{default:(0,t.w5)((()=>[h])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#深拷贝"},{default:(0,t.w5)((()=>[v])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#使用-map-深拷贝"},{default:(0,t.w5)((()=>[f])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#判断字符串是否全为空"},{default:(0,t.w5)((()=>[y])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#判断对象是否为空"},{default:(0,t.w5)((()=>[w])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#检查日期是否有效"},{default:(0,t.w5)((()=>[q])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#查找一年中的某一天"},{default:(0,t.w5)((()=>[x])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#大写字符串"},{default:(0,t.w5)((()=>[_])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#create-vue"},{default:(0,t.w5)((()=>[j])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#给所有的-div-一个-outline-样式"},{default:(0,t.w5)((()=>[U])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#屏幕录制"},{default:(0,t.w5)((()=>[W])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#代理页面解决跨域-子页面-iframe-访问父页面"},{default:(0,t.w5)((()=>[C])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#v8"},{default:(0,t.w5)((()=>[D])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#局域网分享代码方案"},{default:(0,t.w5)((()=>[E])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#生成器示例"},{default:(0,t.w5)((()=>[S])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#vue-slot-常用"},{default:(0,t.w5)((()=>[T])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#事件冒泡与事件捕获"},{default:(0,t.w5)((()=>[O])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#vue3自定义指令"},{default:(0,t.w5)((()=>[N])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#数组对象平铺后遍历处理属性结构的数据-自理的树状对象的垃圾处理方法"},{default:(0,t.w5)((()=>[F])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#js-type-coercion"},{default:(0,t.w5)((()=>[A])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#网页全屏-退出全屏"},{default:(0,t.w5)((()=>[M])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(a,{to:"#async-await"},{default:(0,t.w5)((()=>[L])),_:1})])])]),z,(0,t.Wm)(cn,null,{default:(0,t.w5)((()=>[(0,t.Wm)(on,{title:"YARN"},{default:(0,t.w5)((()=>[R])),_:1}),(0,t.Wm)(on,{title:"NPM",active:""},{default:(0,t.w5)((()=>[I])),_:1})])),_:1}),Y,(0,t.Wm)(un,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ln)])),_:1}),$,(0,t.Wm)(un,null,{default:(0,t.w5)((()=>[(0,t.Wm)(rn)])),_:1}),B,(0,t._)("h2",P,[J,X,(0,t._)("a",V,[H,(0,t.Wm)(kn)])]),G,(0,t.Wm)(un,null,{default:(0,t.w5)((()=>[(0,t.Wm)(dn)])),_:1}),Z,(0,t.Wm)(cn,null,{default:(0,t.w5)((()=>[(0,t.Wm)(on,{title:"安装"},{default:(0,t.w5)((()=>[K])),_:1}),(0,t.Wm)(on,{title:"使用",active:""},{default:(0,t.w5)((()=>[Q])),_:1})])),_:1}),nn,(0,t.Wm)(un,null,{default:(0,t.w5)((()=>[(0,t.Wm)(mn)])),_:1}),sn,(0,t._)("p",null,[(0,t._)("a",an,[tn,(0,t.Wm)(kn)])]),pn,(0,t.Wm)(un,null,{default:(0,t.w5)((()=>[(0,t.Wm)(bn)])),_:1}),en],64)}]])},83744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);