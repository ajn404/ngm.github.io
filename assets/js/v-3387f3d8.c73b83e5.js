"use strict";(self.webpackChunkvue_book=self.webpackChunkvue_book||[]).push([[9465],{30308:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-3387f3d8",path:"/alimap/",title:"客户端",lang:"en-US",frontmatter:{pageClass:"css-transition-and-animation-box",sidebarDepth:10},excerpt:"",headers:[{level:2,title:"目录",slug:"目录",children:[]},{level:2,title:"前端知识图谱",slug:"前端知识图谱",children:[]},{level:2,title:"浏览器",slug:"浏览器",children:[{level:3,title:"浏览器内核",slug:"浏览器内核",children:[]},{level:3,title:"渲染引擎工作原理",slug:"渲染引擎工作原理",children:[]},{level:3,title:"浏览器访问网站的全过程",slug:"浏览器访问网站的全过程",children:[]}]},{level:2,title:"APP",slug:"app",children:[{level:3,title:"小程序",slug:"小程序",children:[]},{level:3,title:"webview",slug:"webview",children:[]},{level:3,title:"uni-app",slug:"uni-app",children:[]},{level:3,title:"Hybrid App",slug:"hybrid-app",children:[]}]},{level:2,title:"网络",slug:"网络",children:[{level:3,title:"同步和异步请求",slug:"同步和异步请求",children:[]},{level:3,title:"Domain",slug:"domain",children:[]},{level:3,title:"TCP/IP",slug:"tcp-ip",children:[]},{level:3,title:"DNS",slug:"dns",children:[]},{level:3,title:"HTTP",slug:"http",children:[]}]},{level:2,title:"服务端",slug:"服务端",children:[{level:3,title:"WebServer",slug:"webserver",children:[]},{level:3,title:"服务端语言",slug:"服务端语言",children:[]},{level:3,title:"数据库",slug:"数据库",children:[]},{level:3,title:"操作系统",slug:"操作系统",children:[]}]},{level:2,title:"行业标准",slug:"行业标准",children:[]}],filePathRelative:"alimap/README.md",git:{updatedTime:163897802e4,contributors:[{name:"ajn404",email:"nhy1423238345@163.com",commits:5},{name:"mac_ajn404",email:"huiyuening00@gmail.com",commits:2},{name:"n-graymoon",email:"huiyue.ning@71360.com",commits:2},{name:"ajn404",email:"huiyuening00@gmail.com",commits:1}]}}},36883:(n,a,s)=>{s.r(a),s.d(a,{default:()=>cn});var t=s(66252);const p=(0,t._)("h2",{id:"目录",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),(0,t.Uk)(" 目录")],-1),e={class:"table-of-contents"},o=(0,t.Uk)("目录"),l=(0,t.Uk)("前端知识图谱"),c=(0,t.Uk)("浏览器"),u=(0,t.Uk)("浏览器内核"),i=(0,t.Uk)("渲染引擎工作原理"),r=(0,t.Uk)("浏览器访问网站的全过程"),k=(0,t.Uk)("APP"),d=(0,t.Uk)("小程序"),h=(0,t.Uk)("webview"),m=(0,t.Uk)("uni-app"),g=(0,t.Uk)("Hybrid App"),b=(0,t.Uk)("网络"),f=(0,t.Uk)("同步和异步请求"),w=(0,t.Uk)("Domain"),v=(0,t.Uk)("TCP/IP"),y=(0,t.Uk)("DNS"),_=(0,t.Uk)("HTTP"),x=(0,t.Uk)("服务端"),W=(0,t.Uk)("WebServer"),q=(0,t.Uk)("服务端语言"),U=(0,t.Uk)("数据库"),T=(0,t.Uk)("操作系统"),S=(0,t.Uk)("行业标准"),j={id:"前端知识图谱",tabindex:"-1"},P=(0,t._)("a",{class:"header-anchor",href:"#前端知识图谱","aria-hidden":"true"},"#",-1),H=(0,t.Uk)(),A={href:"https://f2e.tech/",target:"_blank",rel:"noopener noreferrer"},C=(0,t.Uk)("前端知识图谱"),D=(0,t.uE)('<h1 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h1><h2 id="浏览器" tabindex="-1"><a class="header-anchor" href="#浏览器" aria-hidden="true">#</a> 浏览器</h2><h3 id="浏览器内核" tabindex="-1"><a class="header-anchor" href="#浏览器内核" aria-hidden="true">#</a> 浏览器内核</h3><ol><li><p>google和Opera拥抱的blink</p></li><li><p>苹果的webkit，webkit的鼻祖其实是Safari，而现在chrome的内核已经是blink了</p></li><li><p>微软的edgehtml，早期微软的IE采用的trident</p></li><li><p>火狐的servo，早期火狐采用的gecko</p></li><li><p>浏览器内核只负责渲染，GUI及网络连接等跨平台工作则是浏览器实现的</p></li></ol><h3 id="渲染引擎工作原理" tabindex="-1"><a class="header-anchor" href="#渲染引擎工作原理" aria-hidden="true">#</a> 渲染引擎工作原理</h3><ol><li><p>解析HTML构建的Dom树</p></li><li><p>构建渲染树</p></li><li><p>对渲染树进行布局</p></li><li><p>绘制渲染树</p></li></ol><h3 id="浏览器访问网站的全过程" tabindex="-1"><a class="header-anchor" href="#浏览器访问网站的全过程" aria-hidden="true">#</a> 浏览器访问网站的全过程</h3><ol><li>输入网址</li><li>浏览器根据网址构建http请求报文</li><li>浏览器发起DNS解析请求,将域名转换成IP地址</li><li>浏览器发送请求报文给服务器</li><li>服务器接收报文并解析</li><li>服务器处理用户请求，将结果封装成http响应报文</li><li>服务器发送响应报文给浏览器</li><li>浏览器接收响应报文并解析</li><li>浏览器解析HTML页面并展示，在解析HTML页面时遇到新的资源需要再次发起请求</li><li>最终展示页面</li></ol><h2 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> APP</h2><h3 id="小程序" tabindex="-1"><a class="header-anchor" href="#小程序" aria-hidden="true">#</a> 小程序</h3>',10),M={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/",target:"_blank",rel:"noopener noreferrer"},E=(0,t.Uk)("微信小程序官方文档"),L={href:"https://github.com/NervJS/taro",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Uk)("taro"),N={href:"https://github.com/mpvue/mpvue",target:"_blank",rel:"noopener noreferrer"},O=(0,t.Uk)("mpvue"),V={href:"https://github.com/kaola-fed/megalo",target:"_blank",rel:"noopener noreferrer"},z=(0,t.Uk)("megalo"),F={href:"https://github.com/dcloudio/uni-app",target:"_blank",rel:"noopener noreferrer"},G=(0,t.Uk)("uni-app"),I=(0,t._)("h3",{id:"webview",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#webview","aria-hidden":"true"},"#"),(0,t.Uk)(" webview")],-1),J={href:"https://developer.android.com/reference/android/webkit/WebView",target:"_blank",rel:"noopener noreferrer"},B=(0,t.Uk)("WebView | Android Developers"),X=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">WebView</p><p>A View that displays web pages. This class is the basis upon which you can roll your own web browser or simply display some online content within your Activity. It uses the WebKit rendering engine to display web pages and includes methods to navigate forward and backward through a history, zoom in and out, perform text searches and more.</p></div><h4 id="native" tabindex="-1"><a class="header-anchor" href="#native" aria-hidden="true">#</a> native</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebView</span>\n<span class="token keyword">extends</span> <span class="token class-name">AbsoluteLayout</span> <span class="token keyword">implements</span> <span class="token class-name">ViewTreeObserver<span class="token punctuation">.</span>OnGlobalFocusChangeListener</span>\n<span class="token class-name">ViewGroup<span class="token punctuation">.</span>OnHieranchyChageListener</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="uni-app" tabindex="-1"><a class="header-anchor" href="#uni-app" aria-hidden="true">#</a> uni-app</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>web<span class="token operator">-</span>view <span class="token operator">:</span>webview<span class="token operator">-</span>styles<span class="token operator">=</span><span class="token string">&quot;webviewStyles&quot;</span> src<span class="token operator">=</span><span class="token string">&quot;https://uniapp.dcloud.io/static/web-view.html&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>view<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n\n<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">webviewStyles</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">progress</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#FF3333&#39;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="hybrid-app" tabindex="-1"><a class="header-anchor" href="#hybrid-app" aria-hidden="true">#</a> Hybrid App</h3><div class="custom-container tip"><p class="custom-container-title">Hybrid App</p><p>Hybrid App的本质，其实是在原生的 App 中，使用 WebView 作为容器直接承载 Web页面。因此，最核心的点就是 Native端 与 H5端 之间的双向通讯层，其实这里也可以理解为我们需要一套跨语言通讯方案，来完成 Native(Java/Objective-c/...) 与 JavaScript 的通讯。这个方案就是我们所说的 JSBridge，而实现的关键便是作为容器的 WebView，一切的原理都是基于 WebView 的机制。</p></div><h4 id="ionic" tabindex="-1"><a class="header-anchor" href="#ionic" aria-hidden="true">#</a> ionic</h4><h2 id="网络" tabindex="-1"><a class="header-anchor" href="#网络" aria-hidden="true">#</a> 网络</h2><h3 id="同步和异步请求" tabindex="-1"><a class="header-anchor" href="#同步和异步请求" aria-hidden="true">#</a> 同步和异步请求</h3><h4 id="在控制台输出页面源文件" tabindex="-1"><a class="header-anchor" href="#在控制台输出页面源文件" aria-hidden="true">#</a> 在控制台输出页面源文件</h4><details class="custom-container details"><summary>点击查看</summary><div class="language-javascript ext-js"><pre class="language-javascript"><code>File not found</code></pre><div class="highlight-lines"></div></div></details><h4 id="创建一个标准的方法来读取外部文件" tabindex="-1"><a class="header-anchor" href="#创建一个标准的方法来读取外部文件" aria-hidden="true">#</a> 创建一个标准的方法来读取外部文件</h4><details class="custom-container details"><summary>点击查看</summary><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">xhrSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arguments<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">xhrError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusText<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">loadFile</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> callback <span class="token comment">/*,opt_arg1,opt_arg2,...*/</span>\n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span>callback <span class="token operator">=</span> callback<span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span>arguments <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>\n    xhr<span class="token punctuation">.</span>onload <span class="token operator">=</span> xhrSuccess<span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span>onerror <span class="token operator">=</span> xhrSuccess<span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 用法</span>\n\n<span class="token keyword">function</span> <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div></details><h4 id="使用超时" tabindex="-1"><a class="header-anchor" href="#使用超时" aria-hidden="true">#</a> 使用超时</h4><details class="custom-container details"><summary>点击查看</summary><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// 使用超时</span>\n<span class="token comment">// timeout属性添加于Gecko12.0(很多年前)</span>\n<span class="token keyword">function</span> <span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The request for &quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot;timed out&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>xhr<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span><span class="token function">ope</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span>timeout <span class="token operator">=</span> timeout<span class="token punctuation">;</span>\n    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&quot;message.txt&quot;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> showMessage<span class="token punctuation">,</span> <span class="token string">&quot;New message!\\n\\n&quot;</span><span class="token punctuation">)</span>\n</code></pre></div></details><h4 id="同步请求" tabindex="-1"><a class="header-anchor" href="#同步请求" aria-hidden="true">#</a> 同步请求</h4><details class="custom-container details"><summary>点击查看</summary><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// 同步请求</span>\n<span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nrequest<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;http://www.mozilla.org&#39;</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nrequest<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>status<span class="token operator">===</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div></details><h3 id="domain" tabindex="-1"><a class="header-anchor" href="#domain" aria-hidden="true">#</a> Domain</h3><h3 id="tcp-ip" tabindex="-1"><a class="header-anchor" href="#tcp-ip" aria-hidden="true">#</a> TCP/IP</h3><h3 id="dns" tabindex="-1"><a class="header-anchor" href="#dns" aria-hidden="true">#</a> DNS</h3><h3 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> HTTP</h3><h2 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端" aria-hidden="true">#</a> 服务端</h2><h3 id="webserver" tabindex="-1"><a class="header-anchor" href="#webserver" aria-hidden="true">#</a> WebServer</h3><h4 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h4><h4 id="apache-http-server" tabindex="-1"><a class="header-anchor" href="#apache-http-server" aria-hidden="true">#</a> Apache HTTP Server</h4><h4 id="cdn" tabindex="-1"><a class="header-anchor" href="#cdn" aria-hidden="true">#</a> CDN</h4><h3 id="服务端语言" tabindex="-1"><a class="header-anchor" href="#服务端语言" aria-hidden="true">#</a> 服务端语言</h3><h4 id="php" tabindex="-1"><a class="header-anchor" href="#php" aria-hidden="true">#</a> PHP</h4><h4 id="java" tabindex="-1"><a class="header-anchor" href="#java" aria-hidden="true">#</a> Java</h4><h4 id="golang" tabindex="-1"><a class="header-anchor" href="#golang" aria-hidden="true">#</a> Golang</h4><h3 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h3><h3 id="操作系统" tabindex="-1"><a class="header-anchor" href="#操作系统" aria-hidden="true">#</a> 操作系统</h3><h2 id="行业标准" tabindex="-1"><a class="header-anchor" href="#行业标准" aria-hidden="true">#</a> 行业标准</h2>',34),Y={href:"https://whatwg-cn.github.io/html/?spm=a21iq3.home.0.0.5d7f2764pMPjle",target:"_blank",rel:"noopener noreferrer"},Z=(0,t.Uk)("html标准"),K={href:"https://www.w3.org/Style/CSS/?spm=a21iq3.home.0.0.5d7f2764pMPjle",target:"_blank",rel:"noopener noreferrer"},Q=(0,t.Uk)("css标准"),$={class:"custom-container details"},nn=(0,t._)("summary",null,"示例",-1),an={href:"https://www.w3.org/TR/css-multicol-1/#introduction",target:"_blank",rel:"noopener noreferrer"},sn=(0,t.Uk)("css-multicol"),tn=(0,t.uE)('<div class="language-html ext-html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>多列<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">body</span> <span class="token punctuation">{</span>\n            <span class="token property">font</span><span class="token punctuation">:</span> 14px/1.5 georgia<span class="token punctuation">,</span> serif<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token selector">p</span> <span class="token punctuation">{</span>\n            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n            <span class="token property">padding</span><span class="token punctuation">:</span> 5px 10px<span class="token punctuation">;</span>\n            <span class="token property">background</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token selector">h1</span> <span class="token punctuation">{</span>\n            <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span>\n            <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token selector">.test</span> <span class="token punctuation">{</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 628px<span class="token punctuation">;</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> 10px solid #000<span class="token punctuation">;</span>\n            <span class="token property">-moz-columns</span><span class="token punctuation">:</span> 200px 3<span class="token punctuation">;</span>\n            <span class="token property">-webkit-columns</span><span class="token punctuation">:</span> 200px 3<span class="token punctuation">;</span>\n            <span class="token property">columns</span><span class="token punctuation">:</span> 200px 3<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token selector">.test2</span> <span class="token punctuation">{</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> 10px solid #000<span class="token punctuation">;</span>\n            <span class="token property">-moz-columns</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n            <span class="token property">-webkit-columns</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n            <span class="token property">columns</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>列数及列宽固定:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This module describes multi-column layout in CSS. By using functionality described in this document, style sheets\n        can declare that the content of an element is to be laid out in multiple columns. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>On the Web, tables have also been used to describe multi-column layouts. The main benefit of using CSS-based\n        columns is flexibility; content can flow from one column to another, and the number of columns can vary\n        depending on the size of the viewport. Removing presentation table markup from documents allows them to more\n        easily be presented on various output devices including speech synthesizers and small mobile devices.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>列宽固定，根据容器宽度液态分布列数:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This module describes multi-column layout in CSS. By using functionality described in this document, style sheets\n        can declare that the content of an element is to be laid out in multiple columns. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>On the Web, tables have also been used to describe multi-column layouts. The main benefit of using CSS-based\n        columns is flexibility; content can flow from one column to another, and the number of columns can vary\n        depending on the size of the viewport. Removing presentation table markup from documents allows them to more\n        easily be presented on various output devices including speech synthesizers and small mobile devices.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',1),pn={href:"https://www.w3.org/TR/2018/CR-css-flexbox-1-20181119/",target:"_blank",rel:"noopener noreferrer"},en=(0,t.Uk)("flexbox"),on=(0,t._)("ul",null,[(0,t._)("li")],-1),ln={},cn=(0,s(83744).Z)(ln,[["render",function(n,a){const s=(0,t.up)("RouterLink"),ln=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("nav",e,[(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(s,{to:"#目录"},{default:(0,t.w5)((()=>[o])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#前端知识图谱"},{default:(0,t.w5)((()=>[l])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#浏览器"},{default:(0,t.w5)((()=>[c])),_:1}),(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(s,{to:"#浏览器内核"},{default:(0,t.w5)((()=>[u])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#渲染引擎工作原理"},{default:(0,t.w5)((()=>[i])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#浏览器访问网站的全过程"},{default:(0,t.w5)((()=>[r])),_:1})])])]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#app"},{default:(0,t.w5)((()=>[k])),_:1}),(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(s,{to:"#小程序"},{default:(0,t.w5)((()=>[d])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#webview"},{default:(0,t.w5)((()=>[h])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#uni-app"},{default:(0,t.w5)((()=>[m])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#hybrid-app"},{default:(0,t.w5)((()=>[g])),_:1})])])]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#网络"},{default:(0,t.w5)((()=>[b])),_:1}),(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(s,{to:"#同步和异步请求"},{default:(0,t.w5)((()=>[f])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#domain"},{default:(0,t.w5)((()=>[w])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#tcp-ip"},{default:(0,t.w5)((()=>[v])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#dns"},{default:(0,t.w5)((()=>[y])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#http"},{default:(0,t.w5)((()=>[_])),_:1})])])]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#服务端"},{default:(0,t.w5)((()=>[x])),_:1}),(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(s,{to:"#webserver"},{default:(0,t.w5)((()=>[W])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#服务端语言"},{default:(0,t.w5)((()=>[q])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#数据库"},{default:(0,t.w5)((()=>[U])),_:1})]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#操作系统"},{default:(0,t.w5)((()=>[T])),_:1})])])]),(0,t._)("li",null,[(0,t.Wm)(s,{to:"#行业标准"},{default:(0,t.w5)((()=>[S])),_:1})])])]),(0,t._)("h2",j,[P,H,(0,t._)("a",A,[C,(0,t.Wm)(ln)])]),D,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",M,[E,(0,t.Wm)(ln)])]),(0,t._)("li",null,[(0,t._)("a",L,[R,(0,t.Wm)(ln)])]),(0,t._)("li",null,[(0,t._)("a",N,[O,(0,t.Wm)(ln)])]),(0,t._)("li",null,[(0,t._)("a",V,[z,(0,t.Wm)(ln)])]),(0,t._)("li",null,[(0,t._)("a",F,[G,(0,t.Wm)(ln)])])]),I,(0,t._)("p",null,[(0,t._)("a",J,[B,(0,t.Wm)(ln)])]),X,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",Y,[Z,(0,t.Wm)(ln)])]),(0,t._)("li",null,[(0,t._)("a",K,[Q,(0,t.Wm)(ln)])])]),(0,t._)("details",$,[nn,(0,t._)("p",null,[(0,t._)("a",an,[sn,(0,t.Wm)(ln)])]),tn,(0,t._)("p",null,[(0,t._)("a",pn,[en,(0,t.Wm)(ln)])])]),on],64)}]])},83744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,t]of a)s[n]=t;return s}}}]);