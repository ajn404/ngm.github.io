"use strict";(self.webpackChunkvue_book=self.webpackChunkvue_book||[]).push([[9630],{93899:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-9470d818",path:"/vue_still_learn/",title:"",lang:"en-US",frontmatter:{sidebarDepth:4},excerpt:"",headers:[{level:2,title:"目录",slug:"目录",children:[]},{level:2,title:"概括",slug:"概括",children:[]},{level:2,title:"node-sass",slug:"node-sass",children:[]},{level:2,title:"vue 过滤器",slug:"vue-过滤器",children:[]},{level:2,title:"主动触发 element 表单的检查",slug:"主动触发-element-表单的检查",children:[]},{level:2,title:"使用vuepress内置组件codegroup",slug:"使用vuepress内置组件codegroup",children:[]},{level:2,title:"快速复制网页的cookie",slug:"快速复制网页的cookie",children:[]},{level:2,title:"echarts的图标监听window的大小重绘",slug:"echarts的图标监听window的大小重绘",children:[]},{level:2,title:"获取浏览器Cookie的值",slug:"获取浏览器cookie的值",children:[]},{level:2,title:"将rgb转换成十六进制",slug:"将rgb转换成十六进制",children:[]},{level:2,title:"复制到剪贴板",slug:"复制到剪贴板",children:[]},{level:2,title:"数组去重",slug:"数组去重",children:[]},{level:2,title:"深拷贝",slug:"深拷贝",children:[]},{level:2,title:"判断字符串是否全为空",slug:"判断字符串是否全为空",children:[]},{level:2,title:"判断对象是否为空",slug:"判断对象是否为空",children:[]},{level:2,title:"检查日期是否有效",slug:"检查日期是否有效",children:[]},{level:2,title:"查找一年中的某一天",slug:"查找一年中的某一天",children:[]},{level:2,title:"大写字符串",slug:"大写字符串",children:[]}],filePathRelative:"vue_still_learn/README.md",git:{updatedTime:1637340825e3,contributors:[{name:"n-graymoon",email:"huiyue.ning@71360.com",commits:14},{name:"mac_ajn404",email:"huiyuening00@gmail.com",commits:5}]}}},25452:(n,s,a)=>{a.r(s),a.d(s,{default:()=>N});var p=a(66252);const t=(0,p._)("h2",{id:"目录",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),(0,p.Uk)(" 目录")],-1),e={class:"table-of-contents"},o=(0,p.Uk)("目录"),c=(0,p.Uk)("概括"),l=(0,p.Uk)("node-sass"),u=(0,p.Uk)("vue 过滤器"),i=(0,p.Uk)("主动触发 element 表单的检查"),r=(0,p.Uk)("使用vuepress内置组件codegroup"),k=(0,p.Uk)("快速复制网页的cookie"),b=(0,p.Uk)("echarts的图标监听window的大小重绘"),d=(0,p.Uk)("获取浏览器Cookie的值"),m=(0,p.Uk)("将rgb转换成十六进制"),h=(0,p.Uk)("复制到剪贴板"),g=(0,p.Uk)("数组去重"),v=(0,p.Uk)("深拷贝"),f=(0,p.Uk)("判断字符串是否全为空"),w=(0,p.Uk)("判断对象是否为空"),y=(0,p.Uk)("检查日期是否有效"),_=(0,p.Uk)("查找一年中的某一天"),x=(0,p.Uk)("大写字符串"),j=(0,p.uE)('<h2 id="概括" tabindex="-1"><a class="header-anchor" href="#概括" aria-hidden="true">#</a> 概括</h2><p>技术积累</p><h2 id="node-sass" tabindex="-1"><a class="header-anchor" href="#node-sass" aria-hidden="true">#</a> node-sass</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>cnpm i\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>不然会报错</p><h2 id="vue-过滤器" tabindex="-1"><a class="header-anchor" href="#vue-过滤器" aria-hidden="true">#</a> vue 过滤器</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  filters<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">ellipsis</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;...&#39;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> value\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>在 3.x 中，过滤器已移除，且不再支持。取而代之的是，我们建议用方法调用或计算属性来替换它们。</strong></p><h2 id="主动触发-element-表单的检查" tabindex="-1"><a class="header-anchor" href="#主动触发-element-表单的检查" aria-hidden="true">#</a> 主动触发 element 表单的检查</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>ruleForm<span class="token punctuation">.</span><span class="token function">validateField</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用vuepress内置组件codegroup" tabindex="-1"><a class="header-anchor" href="#使用vuepress内置组件codegroup" aria-hidden="true">#</a> 使用vuepress内置组件codegroup</h2>',11),C=(0,p._)("div",{class:"language-bash ext-sh"},[(0,p._)("pre",{class:"language-bash"},[(0,p._)("code",null,[(0,p._)("span",{class:"token function"},"yarn"),(0,p.Uk)("\n")])])],-1),U=(0,p._)("div",{class:"language-bash ext-sh"},[(0,p._)("pre",{class:"language-bash"},[(0,p._)("code",null,[(0,p._)("span",{class:"token function"},"npm"),(0,p.Uk)(),(0,p._)("span",{class:"token function"},"install"),(0,p.Uk)("\n")])])],-1),W=(0,p._)("div",{class:"custom-container tip"},[(0,p._)("p",{class:"custom-container-title"},"在vue中实现p5有点恶心心"),(0,p._)("p",null,"1.使用toDataURL把canvas转换成base64图片地址 2.或者用refs把canvas \"appendChild\"到vue组件中 3.组件中导入p5,其中p5的方法都要加'p5.'，否则会报错")],-1),O=(0,p.uE)(' vue的组件代码如下 <div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                <span class="token keyword">let</span> judgeCanvasExist <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;defaultCanvas0&quot;</span><span class="token punctuation">)</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>judgeCanvasExist<span class="token operator">===</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">new</span> <span class="token class-name">P5</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\nmethods<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">_p5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">let</span> p5 <span class="token operator">=</span> _p5<span class="token punctuation">;</span>\n                <span class="token keyword">let</span> bubbles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">const</span> window_width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> window_height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>\n                p5<span class="token punctuation">.</span><span class="token function-variable function">setup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    p5<span class="token punctuation">.</span><span class="token function">createCanvas</span><span class="token punctuation">(</span>window_width <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span> window_height <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">let</span> x <span class="token operator">=</span> p5<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>p5<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">let</span> y <span class="token operator">=</span> p5<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span>p5<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">let</span> r <span class="token operator">=</span> p5<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        bubbles<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                    <span class="token keyword">let</span> myCanvas<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;defaultCanvas0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">let</span> container <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>box<span class="token punctuation">;</span>\n                    container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>myCanvas<span class="token punctuation">)</span>\n                    <span class="token comment">// let dataUrl = myCanvas.toDataURL();</span>\n                    <span class="token comment">//base64</span>\n                    <span class="token comment">// this.canvasUrl = dataUrl;</span>\n                    <span class="token comment">// console.log(typeof myCanvas)</span>\n                    <span class="token comment">// console.log(myCanvas.parentNode)</span>\n                    <span class="token comment">// debugger</span>\n                    <span class="token comment">// myCanvas.parentNode.removeNode(myCanvas)</span>\n                <span class="token punctuation">}</span>\n                p5<span class="token punctuation">.</span><span class="token function-variable function">mouseMoved</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> bubbles<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>bubbles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>p5<span class="token punctuation">.</span>mouseX<span class="token punctuation">,</span> p5<span class="token punctuation">.</span>mouseY<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            bubbles<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n                p5<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    p5<span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bubbles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>bubbles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>p5<span class="token punctuation">.</span>mouseX<span class="token punctuation">,</span> p5<span class="token punctuation">.</span>mouseY<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            bubbles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">changeColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                            bubbles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">changeColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                        bubbles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        bubbles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">class</span> <span class="token class-name">Bubble</span> <span class="token punctuation">{</span>\n                    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>r <span class="token operator">=</span> r<span class="token punctuation">;</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>brightness <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n    \n                    <span class="token function">changeColor</span><span class="token punctuation">(</span><span class="token parameter">bright</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>brightness <span class="token operator">=</span> bright<span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n    \n                    <span class="token function">contains</span><span class="token punctuation">(</span><span class="token parameter">px<span class="token punctuation">,</span> py</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">let</span> d <span class="token operator">=</span> p5<span class="token punctuation">.</span><span class="token function">dist</span><span class="token punctuation">(</span>px<span class="token punctuation">,</span> py<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n    \n                    <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> p5<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+</span> p5<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n    \n                    <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        p5<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        p5<span class="token punctuation">.</span><span class="token function">strokeWeight</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        p5<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>brightness<span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        p5<span class="token punctuation">.</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>r <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n    \n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div><h2 id="快速复制网页的cookie" tabindex="-1"><a class="header-anchor" href="#快速复制网页的cookie" aria-hidden="true">#</a> 快速复制网页的cookie</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">copy</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span>\n<span class="token comment">//粘贴并应用</span>\n<span class="token string">&quot;复制的内容&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token operator">=&gt;</span>document<span class="token punctuation">.</span>cookie<span class="token operator">=</span>c<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="echarts的图标监听window的大小重绘" tabindex="-1"><a class="header-anchor" href="#echarts的图标监听window的大小重绘" aria-hidden="true">#</a> echarts的图标监听window的大小重绘</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>chartLine<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="获取浏览器cookie的值" tabindex="-1"><a class="header-anchor" href="#获取浏览器cookie的值" aria-hidden="true">#</a> 获取浏览器Cookie的值</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">cookie</span> <span class="token operator">=</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>document<span class="token punctuation">.</span>cookie<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//cookie(&#39;pgv_pvid&#39;);</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="将rgb转换成十六进制" tabindex="-1"><a class="header-anchor" href="#将rgb转换成十六进制" aria-hidden="true">#</a> 将rgb转换成十六进制</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">rgbToHex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span>g<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;#&#39;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>r<span class="token operator">&lt;&lt;</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>g<span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token comment">//1&lt;&lt;24===1*Math.pow(2,24)</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//rgbToHex(0,51,255)</span>\n<span class="token comment">//toString(16)表示转换成16进制后再转换成字符串</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="复制到剪贴板" tabindex="-1"><a class="header-anchor" href="#复制到剪贴板" aria-hidden="true">#</a> 复制到剪贴板</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">const</span>  <span class="token function-variable function">copyToClipboard</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">text</span> <span class="token operator">=&gt;</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//copyToClipboard(&#39;hello world&#39;)</span>\n<span class="token comment">//Clipboard API是下一代的剪贴板操作方法，比传统的document.exeCommand()方法更强大、更合理</span>\n<span class="token comment">//如果你把上面的代码，粘贴到开发者工具里面运行，就会报错。因为代码运行的时候，开发者工具窗口是当前页，这个页面不存在 Clipboard API 依赖的 DOM 接口。一个解决方法就是，相关代码放到setTimeout()里面延迟运行，在调用函数之前快速点击浏览器的页面窗口，将其变成当前页。</span>\n<span class="token comment">/*\nsetTimeout(async () =&gt; {\n  copyToClipboard(&#39;hello world&#39;)\n}, 2000);\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="数组去重" tabindex="-1"><a class="header-anchor" href="#数组去重" aria-hidden="true">#</a> 数组去重</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n<span class="token keyword">let</span> arr <span class="token operator">=</span> target<span class="token punctuation">;</span>\n<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token keyword">return</span> res\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="深拷贝" tabindex="-1"><a class="header-anchor" href="#深拷贝" aria-hidden="true">#</a> 深拷贝</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">debugger</span>\n    <span class="token keyword">let</span> result<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">===</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>constructor<span class="token operator">===</span>RegExp<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        result <span class="token operator">=</span> target<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>\n        result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      result <span class="token operator">=</span> target<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="判断字符串是否全为空" tabindex="-1"><a class="header-anchor" href="#判断字符串是否全为空" aria-hidden="true">#</a> 判断字符串是否全为空</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[ ]*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="判断对象是否为空" tabindex="-1"><a class="header-anchor" href="#判断对象是否为空" aria-hidden="true">#</a> 判断对象是否为空</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//使用Object.keys()或者Object.getOwnPropertyNames()</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> arr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token comment">//使用JSON.stringfy()</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">!==</span><span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">注意</p><p>Object.keys(), 它返回一个数组，这个数组由对象中可枚举的自有属性的名称组成。 Object.getOwnPropertyNames() 返回一个数组,该数组对元素是obj自身拥有的枚举或不可枚举属性名称字符串。</p></div><h2 id="检查日期是否有效" tabindex="-1"><a class="header-anchor" href="#检查日期是否有效" aria-hidden="true">#</a> 检查日期是否有效</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isDateValid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token operator">...</span>val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//isDateValid(new Date())</span>\n<span class="token comment">//true</span>\n<span class="token comment">//new Date()</span>\n<span class="token comment">//Thu Nov 18 2021 21:11:16 GMT+0800 (中国标准时间)</span>\n<span class="token comment">//格林威治的子午线向东偏移8小时</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="查找一年中的某一天" tabindex="-1"><a class="header-anchor" href="#查找一年中的某一天" aria-hidden="true">#</a> 查找一年中的某一天</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">dayOfYear</span> <span class="token operator">=</span> <span class="token parameter">date</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>date <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">24</span><span class="token punctuation">)</span>\n<span class="token comment">//dayOfYear(new Date())</span>\n<span class="token comment">//322</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="大写字符串" tabindex="-1"><a class="header-anchor" href="#大写字符串" aria-hidden="true">#</a> 大写字符串</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">capitalize</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token comment">//使用</span>\n<span class="token comment">//capitalize(&#39;heiheiheiyohei&#39;)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',27),D={},N=(0,a(83744).Z)(D,[["render",function(n,s){const a=(0,p.up)("RouterLink"),D=(0,p.up)("CodeGroupItem"),N=(0,p.up)("CodeGroup"),T=(0,p.up)("vue-still-learn"),q=(0,p.up)("ClientOnly");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("nav",e,[(0,p._)("ul",null,[(0,p._)("li",null,[(0,p.Wm)(a,{to:"#目录"},{default:(0,p.w5)((()=>[o])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#概括"},{default:(0,p.w5)((()=>[c])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#node-sass"},{default:(0,p.w5)((()=>[l])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#vue-过滤器"},{default:(0,p.w5)((()=>[u])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#主动触发-element-表单的检查"},{default:(0,p.w5)((()=>[i])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#使用vuepress内置组件codegroup"},{default:(0,p.w5)((()=>[r])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#快速复制网页的cookie"},{default:(0,p.w5)((()=>[k])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#echarts的图标监听window的大小重绘"},{default:(0,p.w5)((()=>[b])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#获取浏览器cookie的值"},{default:(0,p.w5)((()=>[d])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#将rgb转换成十六进制"},{default:(0,p.w5)((()=>[m])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#复制到剪贴板"},{default:(0,p.w5)((()=>[h])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#数组去重"},{default:(0,p.w5)((()=>[g])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#深拷贝"},{default:(0,p.w5)((()=>[v])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#判断字符串是否全为空"},{default:(0,p.w5)((()=>[f])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#判断对象是否为空"},{default:(0,p.w5)((()=>[w])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#检查日期是否有效"},{default:(0,p.w5)((()=>[y])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#查找一年中的某一天"},{default:(0,p.w5)((()=>[_])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#大写字符串"},{default:(0,p.w5)((()=>[x])),_:1})])])]),j,(0,p.Wm)(N,null,{default:(0,p.w5)((()=>[(0,p.Wm)(D,{title:"YARN"},{default:(0,p.w5)((()=>[C])),_:1}),(0,p.Wm)(D,{title:"NPM",active:""},{default:(0,p.w5)((()=>[U])),_:1})])),_:1}),W,(0,p.Wm)(q,null,{default:(0,p.w5)((()=>[(0,p.Wm)(T)])),_:1}),O],64)}]])},83744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}}}]);