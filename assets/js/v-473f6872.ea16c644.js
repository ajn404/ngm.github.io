"use strict";(self.webpackChunkvue_book=self.webpackChunkvue_book||[]).push([[6028],{21320:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-473f6872",path:"/back_end_start/java.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"《java核心技术》",slug:"《java核心技术》",children:[{level:3,title:"3.1一个简单的Java应用程序",slug:"_3-1一个简单的java应用程序",children:[]},{level:3,title:"3.2数据类型",slug:"_3-2数据类型",children:[]}]},{level:2,title:"leetcode代码贴",slug:"leetcode代码贴",children:[]}],filePathRelative:"back_end_start/java.md",git:{updatedTime:1647340304e3,contributors:[{name:"mac_ajn404",email:"huiyuening00@gmail.com",commits:2}]}}},63815:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const t=(0,a(66252).uE)('<h2 id="《java核心技术》" tabindex="-1"><a class="header-anchor" href="#《java核心技术》" aria-hidden="true">#</a> 《java核心技术》</h2><h3 id="_3-1一个简单的java应用程序" tabindex="-1"><a class="header-anchor" href="#_3-1一个简单的java应用程序" aria-hidden="true">#</a> 3.1一个简单的Java应用程序</h3><ul><li>FirstSample.java</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstSample</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">Strong</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printin</span><span class="token punctuation">(</span><span class="token string">&quot;We will not use &#39;Hello World!&#39;&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">注</p><ul><li>public 访问修饰符 控制程序的其他部分对这段代码的访问级别</li><li>class 类 加载程序逻辑的容器</li><li>java中的main方法必须是静态的</li><li>void表示该方法无返回值</li><li>System.out还有一个print方法，输出之后不换行</li></ul></div><h3 id="_3-2数据类型" tabindex="-1"><a class="header-anchor" href="#_3-2数据类型" aria-hidden="true">#</a> 3.2数据类型</h3><ul><li>DataType.java</li></ul><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <span class="token keyword">boolean</span> bool<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">byte</span> by<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">char</span> ch<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">double</span> d<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">float</span> f<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">long</span> l<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">short</span> sh<span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token class-name">String</span> str<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// System.out.println(&quot;Bool :&quot; + bool);</span>\n        <span class="token comment">// System.out.println(&quot;Byte :&quot; + by);</span>\n        <span class="token comment">// System.out.println(&quot;Character:&quot; + ch);</span>\n        <span class="token comment">// System.out.println(&quot;Double :&quot; + d);</span>\n        <span class="token comment">// System.out.println(&quot;Float :&quot; + f);</span>\n        <span class="token comment">// System.out.println(&quot;Integer :&quot; + i);</span>\n        <span class="token comment">// System.out.println(&quot;Long :&quot; + l);</span>\n        <span class="token comment">// System.out.println(&quot;Short :&quot; + sh);</span>\n        <span class="token comment">// System.out.println(&quot;String :&quot; + str);</span>\n        <span class="token comment">// 0b表示二进制</span>\n        <span class="token comment">// System.out.println(0b1001);</span>\n</code></pre></div><h2 id="leetcode代码贴" tabindex="-1"><a class="header-anchor" href="#leetcode代码贴" aria-hidden="true">#</a> leetcode代码贴</h2><ul><li>Solution.java 数组中的重复数字</li></ul><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findRepeatNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//1、如何new一个set</span>\n\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">//2、set.contains方法判断是否包含元素</span>\n                <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//3、set添加用add方法</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Solution</span> s <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> res <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">findRepeatNumber</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> resb <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">findRepeatNumber</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resb<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',11),p={},o=(0,a(83744).Z)(p,[["render",function(n,s){return t}]])},83744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);